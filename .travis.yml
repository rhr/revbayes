sudo: required
cache: apt
language: cpp

matrix:
  include:
    - os: linux
      dist: xenial
      env:
        - CXX_COMPILER=/usr/bin/g++-7
        - C_COMPILER=/usr/bin/gcc-7
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:mhier/libboost-latest'
          packages:
          - g++-7
          - pandoc
          - boost1.67
    - os: linux
      dist: xenial
      env:
        - CXX_COMPILER=/usr/bin/g++-8
        - C_COMPILER=/usr/bin/gcc-8
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:mhier/libboost-latest'
          packages:
          - g++-8
          - pandoc
          - boost1.67
    - os: linux
      dist: xenial
      env:
        - CXX_COMPILER=/usr/bin/g++-9
        - C_COMPILER=/usr/bin/gcc-9
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:mhier/libboost-latest'
          packages:
          - g++-9
          - pandoc
          - boost1.67
    - os: linux
      dist: xenial
      env:
        - CXX_COMPILER=/usr/bin/g++-7
        - C_COMPILER=/usr/bin/gcc-7
        - MAYBE_MPI="-mpi true"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:mhier/libboost-latest'
          packages:
          - g++-7
          - pandoc
          - boost1.67
          - libopenmpi-dev
    - os: linux
      dist: xenial
      compiler: clang++
      env:
        - CXX_COMPILER=/usr/local/clang-7.0.0/bin/clang++
        - C_COMPILER=/usr/local/clang-7.0.0/bin/clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'ppa:mhier/libboost-latest'
          packages:
          - g++-8
          - pandoc
          - boost1.67
    - os: osx
      osx_image: xcode9.4
      env: PYTHON=3.5.1
    - os: osx
      osx_image: xcode10.2
      env: PYTHON=3.5.1

before_install:
  # We need to re-export CC and CXX here, because travis exports CXX=g++ or clang++ AFTER we set CXX.
  - if [ -n "${C_COMPILER}" ]; then sudo update-alternatives --install /usr/bin/gcc  gcc "${C_COMPILER}"  90; fi
  - if [ -n "${CXX_COMPILER}" ]; then sudo update-alternatives --install /usr/bin/g++  g++ "${CXX_COMPILER}"  90; fi

script:
# Build
  - cd projects/cmake
  - mkdir build
  - ./regenerate.sh -boost false -travis true ${MAYBE_MPI}
  - cd build
  - cmake . -DINTERNAL_BOOST=OFF
  - make -j4
  - cd ..
# Run tests
  - cd ../..
  - echo "\"Hello World\"" | projects/cmake/rb
  - cd tests
  - ./run_integration_tests.sh ${TRAVIS_BUILD_DIR}/projects/cmake/rb
# Run testiphy
  - export PATH=${TRAVIS_BUILD_DIR}/projects/cmake:$PATH
  - cd
  - git clone https://gitlab.com/testiphy/testiphy.git
  - cd testiphy
  - ./testiphy rb

# notifications
notifications:
  slack: revbayes:bQO6VTun0Orhx2NiKktVPDsS
